//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are reserved words in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class QBOCustomerBalanceDetail {
	public static void consumeObject(JSONParser parser) {
		Integer depth = 0;
		do {
			JSONToken curr = parser.getCurrentToken();
			if (curr == JSONToken.START_OBJECT || 
				curr == JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == JSONToken.END_OBJECT ||
				curr == JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}

	public class Row_Z {
		public Header_Z Header {get;set;} 
		public Rows Rows {get;set;} 
		public Summary Summary {get;set;} 
		public String type_Z {get;set;} // in json: type

		public Row_Z(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'Header') {
							Header = new Header_Z(parser);
						} else if (text == 'Rows') {
							Rows = new Rows(parser);
						} else if (text == 'Summary') {
							Summary = new Summary(parser);
						} else if (text == 'type') {
							type_Z = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Row_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public Header Header {get;set;} 
	public Columns Columns {get;set;} 
	public Rows_Z Rows {get;set;} 

	public QBOCustomerBalanceDetail(JSONParser parser) {
		while (parser.nextToken() != JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != JSONToken.VALUE_NULL) {
					if (text == 'Header') {
						Header = new Header(parser);
					} else if (text == 'Columns') {
						Columns = new Columns(parser);
					} else if (text == 'Rows') {
						Rows = new Rows_Z(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'Root consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class ColData_Z {
		public String value {get;set;} 

		public ColData_Z(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'value') {
							value = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'ColData_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Header_Z {
		public List<ColData> ColData {get;set;} 

		public Header_Z(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'ColData') {
							ColData = new List<ColData>();
							while (parser.nextToken() != JSONToken.END_ARRAY) {
								ColData.add(new ColData(parser));
							}
						} else {
							System.debug(LoggingLevel.WARN, 'Header_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Columns {
		public List<Column> Column {get;set;} 

		public Columns(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'Column') {
							Column = new List<Column>();
							while (parser.nextToken() != JSONToken.END_ARRAY) {
								Column.add(new Column(parser));
							}
						} else {
							System.debug(LoggingLevel.WARN, 'Columns consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Header {
		//public String Time {get;set;} 
		public String ReportName {get;set;} 
		public String DateMacro {get;set;} 
		//public String Currency {get;set;} 
		public String Customer {get;set;} 
		public List<Option> Option {get;set;} 

		public Header(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						//if (text == 'Time') {
						//	Time = parser.getText();
						//} else 
                        if (text == 'ReportName') {
							ReportName = parser.getText();
						} else if (text == 'DateMacro') {
							DateMacro = parser.getText();
						//} else if (text == 'Currency') {
						//	Currency = parser.getText();
						} else if (text == 'Customer') {
							Customer = parser.getText();
						} else if (text == 'Option') {
							Option = new List<Option>();
							while (parser.nextToken() != JSONToken.END_ARRAY) {
								Option.add(new Option(parser));
							}
						} else {
							System.debug(LoggingLevel.WARN, 'Header consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Column {
		public String ColTitle {get;set;} 
		public String ColType {get;set;} 

		public Column(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'ColTitle') {
							ColTitle = parser.getText();
						} else if (text == 'ColType') {
							ColType = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Column consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Rows_Z {
		public List<Row_Z> Row {get;set;} 

		public Rows_Z(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'Row') {
							Row = new List<Row_Z>();
							while (parser.nextToken() != JSONToken.END_ARRAY) {
								Row.add(new Row_Z(parser));
							}
						} else {
							System.debug(LoggingLevel.WARN, 'Rows_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class ColData {
		public String value {get;set;} 
		public String id {get;set;} 

		public ColData(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'value') {
							value = parser.getText();
						} else if (text == 'id') {
							id = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'ColData consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Summary {
		public List<ColData_Z> ColData {get;set;} 

		public Summary(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'ColData') {
							ColData = new List<ColData_Z>();
							while (parser.nextToken() != JSONToken.END_ARRAY) {
								ColData.add(new ColData_Z(parser));
							}
						} else {
							System.debug(LoggingLevel.WARN, 'Summary consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Option {
		public String Name {get;set;} 
		public String Value {get;set;} 

		public Option(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'Name') {
							Name = parser.getText();
						} else if (text == 'Value') {
							Value = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Option consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Row {
		public List<ColData_Z> ColData {get;set;} 
		public String type_Z {get;set;} // in json: type

		public Row(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'ColData') {
							ColData = new List<ColData_Z>();
							while (parser.nextToken() != JSONToken.END_ARRAY) {
								ColData.add(new ColData_Z(parser));
							}
						} else if (text == 'type') {
							type_Z = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Row consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Rows {
		public List<Row> Row {get;set;} 

		public Rows(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'Row') {
							Row = new List<Row>();
							while (parser.nextToken() != JSONToken.END_ARRAY) {
								Row.add(new Row(parser));
							}
						} else {
							System.debug(LoggingLevel.WARN, 'Rows consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static QBOCustomerBalanceDetail parse(String json) {
		return new QBOCustomerBalanceDetail(System.JSON.createParser(json));
	}
}