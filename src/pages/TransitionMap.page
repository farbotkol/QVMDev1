<apex:page id="transitionMapPage" controller="TransitionMapController" sidebar="false" showHeader="false">
    <head>
        <title>QVM Map</title>
        <style>
        .draggable,
        .room {
            text-align: center
        }
            
        body {
            background-image: url({!imageURL});
            background-size: 5500px;
            background-position: 0px 0px;
            background-repeat: no-repeat;
        }
            
        form {
            font: 13px/18px Arial, sans-serif
        }
        .floorplan {
            /*background: #ebecec;*/
            height: 11500px;
            position: relative;
            width: 5500px;
        }
        .room {
            position: absolute!important;
            background: #fff;
            color: #000;
            display: block;
            border: 1px solid #464646!important;
            font-family: Arial;
            font-size: 11px;
            padding-top: 5px;
            
        
        }
        .draggable {
            -ms-touch-action: none;
            touch-action: none
            
        }
            
        rotate {
            -webkit-transform: rotate({!rotationValueString});
            -moz-transform: rotate({!rotationValueString});
            -o-transform: rotate({!rotationValueString});
            -ms-transform: rotate({!rotationValueString});
            transform: rotate({!rotationValueString});
        }
            
        .rotation0 {
            -webkit-transform: rotate(0deg);
            -moz-transform: rotate(0deg);
            -o-transform: rotate(0deg);
            -ms-transform: rotate(0deg);
            transform: rotate(0deg);
        }
            
        .rotation5 {
            -webkit-transform: rotate(5deg);
            -moz-transform: rotate(5deg);
            -o-transform: rotate(5deg);
            -ms-transform: rotate(5deg);
            transform: rotate(5deg);
        }
            
        .rotation10 {
            -webkit-transform: rotate(10deg);
            -moz-transform: rotate(10deg);
            -o-transform: rotate(10deg);
            -ms-transform: rotate(10deg);
            transform: rotate(10deg);
        }
        
        .rotation15 {
            -webkit-transform: rotate(15deg);
            -moz-transform: rotate(15deg);
            -o-transform: rotate(15deg);
            -ms-transform: rotate(15deg);
            transform: rotate(15deg);
        }
            
        .rotation20 {
            -webkit-transform: rotate(20deg);
            -moz-transform: rotate(20deg);
            -o-transform: rotate(20deg);
            -ms-transform: rotate(20deg);
            transform: rotate(20deg);
        }
            
            
        .rotation25 {
            -webkit-transform: rotate(25deg);
            -moz-transform: rotate(25deg);
            -o-transform: rotate(25deg);
            -ms-transform: rotate(25deg);
            transform: rotate(25deg);
        }
            
            
        .rotation30 {
            -webkit-transform: rotate(30deg);
            -moz-transform: rotate(30deg);
            -o-transform: rotate(30deg);
            -ms-transform: rotate(30deg);
            transform: rotate(30deg);
        }
        .rotation35 {
            -webkit-transform: rotate(35deg);
            -moz-transform: rotate(35deg);
            -o-transform: rotate(35deg);
            -ms-transform: rotate(0deg);
            transform: rotate(35deg);
        }
        .rotation40 {
            -webkit-transform: rotate(40deg);
            -moz-transform: rotate(40deg);
            -o-transform: rotate(40deg);
            -ms-transform: rotate(40deg);
            transform: rotate(40deg);
        }
            
        .rotation45 {
            -webkit-transform: rotate(45deg);
            -moz-transform: rotate(45deg);
            -o-transform: rotate(45deg);
            -ms-transform: rotate(45deg);
            transform: rotate(45deg);
        }
        
        .rotation90 {
            -webkit-transform: rotate(90deg);
            -moz-transform: rotate(90deg);
            -o-transform: rotate(90deg);
            -ms-transform: rotate(90deg);
            transform: rotate(90deg);
        }
            
        .rotation315 {
            -webkit-transform: rotate(315deg);
            -moz-transform: rotate(315deg);
            -o-transform: rotate(315deg);
            -ms-transform: rotate(315deg);
            transform: rotate(315deg);
        }
            
        .rotation320 {
            -webkit-transform: rotate(320deg);
            -moz-transform: rotate(320deg);
            -o-transform: rotate(320deg);
            -ms-transform: rotate(320deg);
            transform: rotate(320deg);
        }
        .rotation325 {
            -webkit-transform: rotate(325deg);
            -moz-transform: rotate(325deg);
            -o-transform: rotate(325deg);
            -ms-transform: rotate(325deg);
            transform: rotate(325deg);
        }
        .rotation330 {
            -webkit-transform: rotate(330deg);
            -moz-transform: rotate(330deg);
            -o-transform: rotate(330deg);
            -ms-transform: rotate(330deg);
            transform: rotate(330deg);
        }
        .rotation335 {
            -webkit-transform: rotate(335deg);
            -moz-transform: rotate(335deg);
            -o-transform: rotate(335deg);
            -ms-transform: rotate(335deg);
            transform: rotate(335deg);
        }
        .rotation340 {
            -webkit-transform: rotate(340deg);
            -moz-transform: rotate(340deg);
            -o-transform: rotate(340deg);
            -ms-transform: rotate(340deg);
            transform: rotate(340deg);
        }
        .rotation345 {
            -webkit-transform: rotate(345deg);
            -moz-transform: rotate(345deg);
            -o-transform: rotate(345deg);
            -ms-transform: rotate(345deg);
            transform: rotate(345deg);
        }
        .rotation350 {
            -webkit-transform: rotate(350deg);
            -moz-transform: rotate(350deg);
            -o-transform: rotate(350deg);
            -ms-transform: rotate(350deg);
            transform: rotate(350deg);
        }
        .rotation355 {
            -webkit-transform: rotate(355deg);
            -moz-transform: rotate(355deg);
            -o-transform: rotate(355deg);
            -ms-transform: rotate(355deg);
            transform: rotate(355deg);
        }
           
            
        .resize-drag {
            box-sizing: border-box
        }
        .tooltip {
            position: relative;
            display: inline-block
        }
        .container #tooltip {
            position: relative;
            width: 250px;
            height: 115px;
            background: #0d6f8a;
            margin-bottom: 20px;
            left: 10px;
            top: -160px;
            visibility: hidden;
            z-index: 16777271!important;
            background-image: -moz-linear-gradient(top, rgba(0, 0, 0, 0) 0, rgba(0, 0, 0, .3) 100%);
            background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(0, 0, 0, 0)), color-stop(100%, rgba(0, 0, 0, .3)));
            background-image: -webkit-linear-gradient(top, rgba(0, 0, 0, 0) 0, rgba(0, 0, 0, .3) 100%);
            background-image: -o-linear-gradient(top, rgba(0, 0, 0, 0) 0, rgba(0, 0, 0, .3) 100%);
            background-image: -ms-linear-gradient(top, rgba(0, 0, 0, 0) 0, rgba(0, 0, 0, .3) 100%);
            background-image: linear-gradient(top, rgba(0, 0, 0, 0) 0, rgba(0, 0, 0, .3) 100%);
            filter: progid: DXImageTransform.Microsoft.gradient( startColorstr='#00000000', endColorstr='#4d000000', GradientType=0);
            -webkit-transition: all .3s 1s ease;
            -moz-transition: all .3s 1s ease;
            -ms-transition: all .3s 1s ease;
            -o-transition: all .3s 1s ease;
            transition: all .3s 1s ease;
            border-radius: 5px;
            -moz-border-radius: 5px;
            -webkit-border-radius: 5px;
            box-shadow: 0 1px 2px 0 rgba(0, 0, 0, .5), inset 0 1px 0 0 rgba(255, 255, 255, .4);
            -moz-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, .5), inset 0 1px 0 0 rgba(255, 255, 255, .4);
            -webkit-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, .5), inset 0 1px 0 0 rgba(255, 255, 255, .4)
        }
        .container #tooltip .info h2 {
            color: #fff;
            font: 700 17px/34px Arial;
            text-shadow: 1px 1px 0 rgba(0, 0, 0, .3);
            margin: 0
        }
        .container #tooltip .info p,
        .container #tooltip .info p a {
            font: 13px/18px Arial, sans-serif;
            color: #fff;
            margin-top: 0
        }
        .container #tooltip:after {
            content: '';
            position: absolute;
            bottom: -10px;
            width: 20px;
            height: 20px;
            background: #0d6f8a;
            left: 10px;
            z-index: 16777271!important;
            background-image: -webkit-linear-gradient(-45deg, rgba(0, 0, 0, .27) 0, rgba(0, 0, 0, .3) 100%);
            background-image: -moz-linear-gradient(-45deg, rgba(0, 0, 0, .27) 0, rgba(0, 0, 0, .3) 100%);
            background-image: -o-linear-gradient(-45deg, rgba(0, 0, 0, .27) 0, rgba(0, 0, 0, .3) 100%);
            background-image: -ms-linear-gradient(-45deg, rgba(0, 0, 0, .27) 0, rgba(0, 0, 0, .3) 100%);
            background-image: linear-gradient(-45deg, rgba(0, 0, 0, .27) 0, rgba(0, 0, 0, .3) 100%);
            -webkit-transform: rotate(45deg);
            -moz-transform: rotate(45deg);
            -o-transform: rotate(45deg);
            -ms-transform: rotate(45deg);
            transform: rotate(45deg);
            box-shadow: 2px 2px 1px 0 rgba(0, 0, 0, .2);
            -moz-box-shadow: 2px 2px 1px 0 rgba(0, 0, 0, .2);
            -webkit-box-shadow: 2px 2px 1px 0 rgba(0, 0, 0, .2)
        }
        .container {
            color: #aaa;
            font: 13px/18px Arial, sans-serif
        }
        .container span,
        .container span.trigger {
            color: #000;
            text-decoration: none;
        }
        .container span.trigger:hover~#tooltip {
            opacity: 1;
            visibility: visible;
            top: -140px;
            -webkit-transition: all .3s ease;
            -moz-transition: all .3s ease;
            -ms-transition: all .3s ease;
            -o-transition: all .3s ease;
            transition: all .3s ease;
        }
        .container #tooltip .close {
            position: absolute;
            top: 5px;
            right: 6px;
            font-size: 20px;
            font-weight: 700;
            line-height: 18px;
            color: #000;
            text-shadow: 0 1px 0 #fff;
            opacity: .2;
            filter: alpha(opacity=20);
            text-decoration: none;
        }
        .container #tooltip .close:hover {
            color: #000;
            text-decoration: none;
            opacity: .4;
            filter: alpha(opacity=40);
            cursor: pointer;
        }
        .legendColor{
            position: absolute!important;
            background: #fff;
            color: #000;
            display: block;
            top:1190mm;
            left:48mm;
            border: 1px solid #464646!important;
            margin:0px;
            padding:0px;
            
        }
        .legendColor table{
            border-spacing: 0px;
            vertical-align: bottom;
           
            border-collapse: collapse;
        }
        .legendColor table tr td{    
            min-width: 50px;
            text-align:right;
            font: 13px/18px Arial, sans-serif;
            border-bottom:1px solid #464646;
             padding:5px;
        }
            
        
            
        </style>
     
        <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
        <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
        <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css"/>
            
        <script>
        
        // var rotating = false;
        var rotation = 0;
        var currentid = 0;
        var previd = 0;
        var dragging = false;
        var rotationIncrement = 5;
        
        
        
        var snapvalue = false;
        
        if (localStorage.getItem("snapvalue") != null) 
        {
            snapvalue = localStorage.getItem("snapvalue");
            console.log("LOCALSTORGE IS: "+localStorage.getItem("snapvalue"));
        }
        console.log("SNAPVALUE IS: "+snapvalue);
        var snapvalueBool = Boolean(snapvalue=="true");
        //var snapvalueBool = true;
        console.log("SNAPVALUEBOOL IS: "+snapvalueBool);
        //localStorage.setItem("snapvalue", snapvalue);
        //document.getElementById("snapStatus").value = snapvalue;
        
        $( function() {
            
              $( ".draggable" ).draggable({ containment: "#dropzone"
                                           ,cursor: "move"
                                           ,snap: snapvalueBool
                                           /*,stack: ".room"*/
                                           ,stop: function( event, ui ) {
                                                    var dpi = $('#dpidiv').outerWidth(true);
                                                    // mm = pixel*25.4/dpi    -----  demensions saved are based on mm unit
                                                    console.log("REACHED DRAGGABLE: dpi = "+dpi);
                                               		dragging = true;
                                                    CallApexMethod(ui.helper[0].id , (ui.helper[0].offsetWidth*25.4/dpi).toFixed(), (ui.helper[0].offsetHeight*25.4/dpi).toFixed(),(ui.position.left*25.4/dpi).toFixed(),(ui.position.top*25.4/dpi).toFixed()) ;
                           							
                                           }})
                           .resizable({  maxHeight: 250,
                                          maxWidth: 350,
                                          minHeight: 10,
                                          minWidth: 10,
                                        containment: "#dropzone",
                                        stop: function( event, ui ) {
                                            $(ui.helper[0].id).css("line-height",ui.helper[0].offsetHeight+"px");
                                         var dpi = $('#dpidiv').outerWidth(true);
                                         // mm = pixel*25.4/dpi    -----  demensions saved are based on mm unit
                                         console.log("REACHED RESIZABLE");
                                         dragging = true;
                                         CallApexMethod(ui.helper[0].id , (ui.helper[0].offsetWidth*25.4/dpi).toFixed(), (ui.helper[0].offsetHeight*25.4/dpi).toFixed(),(ui.position.left*25.4/dpi).toFixed(),(ui.position.top*25.4/dpi).toFixed()) ;
                                      }
                            });
            
            	
            
            jQuery.fn.rotate = function(id, degrees) {
                console.log("REACHED ROTATE, ROTATION IS "+rotation);
                
                console.log("CURRENT ID IS: "+currentid);
                $(this).css({'transform' : 'rotate('+ degrees +'deg)'});
                UpdateRotation(currentid, rotation);	//needs parameters
               
            };


            
            $('.draggable').click(function() {
                if (!dragging) {
                    
                currentid = $(this).attr('id');
                if (currentid == previd)
                {
                    rotation += rotationIncrement;
                }    
                    
                
                if ((rotation > 45) && (rotation < 315))
                {
					rotation = 315;
                }
                if (rotation >= 360)
                {
					rotation = rotation-360;
                }
                
                
                previd = currentid;
                
                //console.log('Item Rotation: 'rotate_degree($(this)));
                
                
                
                $(this).rotate(currentid, rotation);
                    }
                dragging = false;
            });
            
            /*
                            var target = $('#target')
                            target.mousedown(function() {
                                console.log("REACHED ROTATING");
                                if (rotating == false)
                                {
                                    rotating = true;
                                }
                                else
                                {
                                    rotating = false;
                                }
                            })
                
                            $(document).mousemove(function(e) {
                                if (rotating) {
                        
                                    var mouse_x = e.pageX;
                                    var mouse_y = e.pageY;
                                    var radians = Math.atan2(mouse_x - 10, mouse_y - 10);
                                    var degree = (radians * (180 / Math.PI) * -1) + 90;
                                    target.css('-moz-transform', 'rotate(' + degree + 'deg)');
                                    target.css('-moz-transform-origin', '0% 40%');
                                    target.css('-webkit-transform', 'rotate(' + degree + 'deg)');
                                    target.css('-webkit-transform-origin', '0% 40%');
                                    target.css('-o-transform', 'rotate(' + degree + 'deg)');
                                    target.css('-o-transform-origin', '0% 40%');
                                    target.css('-ms-transform', 'rotate(' + degree + 'deg)');
                                    target.css('-ms-transform-origin', '0% 40%');
                                }
                            })
         */
                            
        });   
        
    </script>
    </head>
    
    <apex:form id="mapForm">
        <div style="position:fixed; z-index: 100; bottom:0px; right:0px;">
       <apex:pageBlock >
           
               
       <apex:outputLabel value="  Weekday to Refresh: " for="weekdayRefresh" />
        <apex:selectList id="selectedWeekdayRefresh" value="{!selectedWeekdayRefresh}" size="1" multiselect="false" label="Select a day" >
            <apex:selectOptions value="{!weekdayRefreshOptions}"></apex:selectOptions>
        </apex:selectList>
          <apex:commandButton status="fetchStatus" value="Refresh" action="{!refresh}" title="Refresh Page"/>
           <apex:commandButton status="fetchStatus" action="{!edit}" value="Edit" title="Refresh Page"/>
           
           <input type="button" value="Toggle Snap" class="btn" onclick="toggleSnap()" />
           
           <input type="button" value="Back to Salesforce" class="btn" onclick="toHomePage()" />
           
           
           <br/>
           <input type="button" value="Upload Map Image" class="btn" onclick="toUploadPage()" />
           
           <div class="snapStatus"></div>
           
          
           
           
           <script>
           var message = "";
           if (snapvalueBool == false)
           {
               message = "Snap is off";
           }
           else if (snapvalueBool == true)
           {
               message = "Snap is on";
           }
           
           $('.snapStatus').html(message);
           
           function toUploadPage(){
            	// create case, etc.
            	window.location.href='./apex/TransitionMapUpload';
        	}
           function toHomePage(){
            	// create case, etc.
            	window.location.href='/';
        	}
           function toggleSnap(){
               //toggle snapvalue
               if (snapvalue == "false")
                   {
                       snapvalue = "true";
                   }
               else 
                   {
                       snapvalue = "false";
                   }
                localStorage.setItem("snapvalue", snapvalue);
               console.log("SNAPVALUE JUST BEFORE RELOAD IS: "+snapvalue);
            	location.reload();            
        	}
           
           
           </script>
           <apex:pageMessages />
   

     
        
    		
           
           
           
           
           
           <apex:outputPanel style="color:#4AA02C;font-weight:bold">
                  <apex:actionStatus id="fetchStatus" startText="Fetching..." stopText=""/>
              </apex:outputPanel> 
            
        </apex:pageBlock> 
         </div>
        
        <apex:outputtext value="{!buildTable}" escape="false" id="tblHTML"/> 
        <apex:actionFunction name="CallApexMethod" action="{!UpdateAttributes}" onComplete=";">
            <apex:param name="stallid" value=""/>
            <apex:param name="width" value=""/>
            <apex:param name="height" value=""/>
            <apex:param name="left" value=""/>
            <apex:param name="top" value=""/>
            <!-- <apex:param name="rotation" value="0"/> -->
        </apex:actionFunction>
        
        <apex:actionFunction name="UpdateRotation" action="{!UpdateRotation}" onComplete=";">
            <apex:param name="stallidrotation" value=""/>
            <apex:param name="rotation" value=""/>
        </apex:actionFunction>
    </apex:form>
</apex:page>